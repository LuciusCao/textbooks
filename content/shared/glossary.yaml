# ==============================================================================
# GENERAL
# ==============================================================================


axiom:
  title: Axiom
  text: An __axiom__ of (__postulate__) postulate is a statement that is
    accepted as true without requiring proof.

theorem:
  title: Theorem
  text: A __theorem__ is a particularly important statement or observation in
    mathematics.

proof:
  title: Proof
  text: A __proof__ is a logical argument that shows beyond any doubt that a
    certain statement is true.



# ==============================================================================
# ALGEBRA
# ==============================================================================


term:
  title: Term (Algebra)
  text: TODO

variable:
  title: Variable
  text: A __variable__ is an unknown quantity in an algebraic expression, which
    is usually represented by a letter like _x_.

coefficient:
  title: Coefficient
  text: A __coefficient__ is the number by which a variable or a power of a
    variable is multiplied. For exmple, the coefficient of `5x^2` is 5, and the
    coefficient of `7y` is 7.

polynomial:
  title: Polynomial
  text: A __polynomial__ is an algebraic expression that consists of multiple
    powers of a variable, for example `5x^3 - 2x^2 + x + 4`.

polynomial-degree:
  title: Degree
  text: The degree of a polynomial is the highest power of any variables in it.
    For example, the degree of `5x^3 + 2x - 4` is 3.

quadratic:
  title: Quadratic
  text: A __quadratic__ is a polynomial of degree 2. For example, `x^2 - 2x + 3`
    is a quadratic.

associative:
  title: Associativity
  text: An operation • is associative if `a•(b•c) = (a•b)•c`. For example,
    addition (+) and multiplication (×) of numbers is associative.

function:
  title: Function
  text: A __function__ is a mathematical relation that converts inputs (_x_)
    into outputs (_y_). They are often expressed as mathematical equations of
    the form `f(x)`.

function-graph:
  title: Graphs of Functions
  text: We can plot mathematical functions of the form `f(x)` in a coordinate
    system. The result is called the __graph__ of the function.

irrational:
  title: Irrational Numbers
  text: A number is __irrational__ if it cannot be expressed as a fraction. For
    example, 0.333333… = `1/3` is _rational_, but `sqrt(2)` = 1.41421… cannot be
    expressed as a fraction and is _irrational_


# ==============================================================================
# SEQUENCES
# ==============================================================================


sequence:
  title: Sequence
  text: TODO

sequence-term:
  title: Terms of a Sequence
  text: TODO

sequence-recursive:
  title: Recursie Formula
  text: TODO

sequence-explicit:
  title: Explicit Formula
  text: TODO

arithmetic-sequence:
  title: Arithmetic Sequence
  text: An __arithmetic sequence__ (sometimes called __arithmetic progression__)
    is a sequence of numbers in which the difference _d_ between consecutive
    terms is always the same.

geometric-sequence:
  title: Geometric Sequence
  text: A __geometric sequence__ (sometimes called __geometric progression__)
    is a sequence of numbers in which the ratio _r_ between consecutive terms
    is always the same.


# ==============================================================================
# GEOMETRY
# ==============================================================================


euclidean-geometry:
  title: Euclidean Geometry
  text: __Euclidean geometry__ is the kind of geometry envisioned by the
    mathematician _Euclid_. It dependes on just five _axiom_, the sort of “laws”
    of geometry, that describe everything that you’re allowed to do.

point:
  title: Point
  text: A __point__ is a specific location in space. Points describe a position,
    but have no size or shape themselves.
  id: euclidean-geometry#point

line:
  title: Line
  text: A __line__ is a set of infinitely many points that extend forever in
    both directions. Lines are always straight and have no _width_.

ray:
  title: Ray
  text: A __ray__ is the part of a line that only extends to infinity in one
    direction. We can label rays as `vec(AB)`.

line-segment:
  title: Line segment
  text: A __line segment__ is the part of a line that lies between two points,
    without extending to infinity. We can label line segments as `bar(AB)`.

collinear:
  title: Collinear points
  text: Three or more points are __collinear__ if they lie on the same line.

congruent:
  title: Congruence
  text: In geometry, two figures are __congruent__ if are identical in size,
    shape and measure. This means we could move, flip or rotate them to exactly
    fit on top of each other.

congruent-angles:
  title: Congruent Angles
  text: Two angles are __congruent__ if they have the same size.

midpoint:
  title: Midpoint
  text: The __midpoint__ of a line segment is the point on the line segment that
    splits the segment in the middle, into two congruent parts. The __midpoint
    formula__ says that for endpoints `(x_1, y_1)` and `(x_2,y_2)`, the midpoint
    is `((x_1 + x_2)/2, (y_1 + y_2)/2)`.

perpendicular-bisector:
  title: Perpendicular bisector
  text: The __perpendicular bisector__ of a line segment passes through its
    midpoint and intersects it at an angle of 90°.
  image: perpendicular-bisector.svg

angle-bisector:
  title: Angle bisector
  text: An __angle bisector__ is a line that splits an angle in the middle, into
    two congruent, smaller angles.
  image: angle-bisector.svg

protractor:
  title: Protractor
  text: A protractor is a tool used to measure an angle in degrees.

transversal:
  title: Traversal
  text: A transversal is a line that intersects two other lines.

parallel:
  title: Parallel lines
  text: Two or more lines are __parallel__ if they never intersect. They have
    the same slope and the distance between them is always constant.
  image: parallel.svg

perpendicular:
  title: Perpendicular lines
  text: Two lines are __perpendicular__ if they intersect at a right angle.
  image: perpendicular.svg


# ------------------------------------------------------------------------------
# Angles

acute-angle:
  title: Acute angle
  text: An __acute angle__ is an angle of size less than 90°.

obtuse-angle:
  title: Obtuse angle
  text: An __obtuse angle__ is an angle of size greater than 90° but less than
    180°

right-angle:
  title: Right angle
  text: A __right angle__ is an angle equal to 90°.

supplementary-angles:
  title: Supplementary angles
  text: Two angles are __supplementary__ if they add up to 180°.

complementary-angles:
  title: Complementary angles
  text: Two angles are __complementary__ if they add up to 90°.

verticle-angles:
  title: Vertical angles
  text: __Vertical angles__ are pairs of opposite angles created by
    intersecting lines. Vertical angles are always _congruent_.

corresponding-angles:
  title: Corresponding angles
  text: __Corresponding angles__ are two angles that are in the same position
    with respect to the transversal, but on different lines. They are always
    congruent.
  image: corresponding-angles.svg

alternate-angles:
  title: Alternate angles
  text: __Alternate angles__ are two angles that are on the interior of two
    different lines, but on the opposite sides of the transversal. They are
    always congruent.
  image: alternate-angles.svg

adjacent-angles:
  title: Anjacent angles
  text: Two angles are __adjacent__ if they share a side and vertex. The word
    _adjacent_ means “beside” or “next-to”.


# ------------------------------------------------------------------------------
# Transformations

transformation:
  title: Transformation
  text: A __transformation__ converts one geometric shape into another. There
    are many different types of transformations, like _reflections_ or
    _dilations_.

transformation-image:
  title: Image of a Transformation
  text: After transforming a geometric shape, the result is called its
    __image__. It is often denoted by adding a ’ to the end of its label.

rigid-transformation:
  title: Rigid transformation
  text: A __rigid transformation__ (or __isometry__) is a transformation that
    doesn't change the size or shape of a geometric figure.

translation:
  title: Translation
  text: A __translation__ is a transformation that moves a figure in a specific
    direction.

reflection:
  title: Reflection
  text: A __reflection__ is a transformation that “flips” or “mirrors” a shape
    across a line.

rotation:
  title: Rotation
  text: A __rotation__ is a transformation that “turns” a shape by a certain
    angle around a fixed point.

glide-reflection:
  title: Glide Reflections
  text: A __glide reflection__ is a special kind of transformation. It is a
    combination of a _reflection_ and a _translation_ in the same direction as
    the axis of reflection.

center-of-rotation:
  title: Center of Rotation
  text: The __center of rotation__ is the point around which a shape is being
    rotated.

symmetry:
  title: Symmetry
  text: A figure or shape has __symmetry__, if it looks the same after being
    transformed in some way (e.g. reflection or rotation).

reflectional-symmetry:
  title: Reflectional Symmetry
  text: A shape has reflectional symmetry if it looks the same after being
    reflected.
  image: reflectional-symmetry.svg

axis-of-symmetry:
  title: Axis of Symmetry
  text: If a shape has reflectional symmetry, the __axis of symmetry__ is the
    line that divides it into two equal halves.
  image: reflectional-symmetry.svg

rotational-symmetry:
  title: Rotational Symmetry
  text: A shape has rotational symmetry if it looks the same after being rotated
    (by less than 360°).
  image: rotational-symmetry.svg

order-of-symmetry:
  title: Order of Symmetry
  text: If a shape has rotational symmetry, the __order of symmetry__ is the
    number of orientations in which the shape looks the same. (Or, it is the
    number of times you can rotate the shape, before we get back to the start.)

translational-symmetry:
  title: Translational Symmetry
  text: A repeated pattern (like a wallpaper) has __translational symmetry__ if
    it looks the same after being translated by a specific distance.

palindrome:
  title: Palindrome
  text: A __palindrome__ is a word or number that reads the same from back to
    front as it does from front to back. For example, 25752 and “ANNA” are both
    palindromes.

group:
  title: Group
  text: |
    A group is a collection of “things” (like numbers or symmetries) that follow
    three different rules:

    1. You you add/combine two of the things, to get another one that is also
       in the group.
    2. The things are _associative_, which means that `a+(b+c) + (a+b)+c`.
    3. There is an _identity_, and every “thing” has an _inverse_ which, when
       added, gives the identity.

symmetry-group:
  title: Symmetry Group
  text: The __symmetry group__ of a geometric object is the collection of all of
    its _symmetries_ (as well as the _identity_).

laws-of-nature:
  title: Laws of Nature
  text: The __laws of nature__ are the name given collectively to the physical
    rules (usually expressed as mathematical equations) that try to explain
    everything we observe in the universe.

dilation:
  title: Dilation
  text: A __dilation__ is a transformation that resizes a geometric shape, by
    making it bigger or smaller.

similar:
  title: Similar
  text: Two geometric shapes are __similar__ if they have the same shape but a
    different size. We can move, rotate, reflect and resize one shape to match
    up with the other one.

scale-factor:
  title: Scale Factor
  text: The __scale factor__ of a dilation is the amount by which the shape is
    stretched or squashed.


# ------------------------------------------------------------------------------
# Triangles

equilateral-triangle:
  title: Equilateral triangle
  text: An __equilateral triangle__ is a triangle in which all three sides have
    the same length.

acute-triangle:
  title: Acute triangle
  text: In an __acute triangle__, all three angles are _acute_ (less than 90°).

isosceles-triangle:
  title: Isosceles triangle
  text: In an __isosceles triangle__, two sides have the same length.

obtuse-triangle:
  title: Obtuse triangle
  text: In an __obtuse triangle__, one angle is larger than 90°.

right-triangle:
  title: Right-angled triangle
  text: In a __right-angled triangle__, one angle is exactly 90°.
  image: right-triangle.svg

scalene-triangle:
  title: Scalene Triangle
  text: In a __scalene triangle__, all three sides have different lengths.

median:
  title: Median
  text: The __medians__ of a triangle are the lines that connect each vertex to
    the midpoint of their opposite sides.

triangle-midsegment:
  title: Midsegment
  text: The __midsegments__ of a triangle are the lines that connect the
    midpoints of different sides of the triangle.
  image: triangle-midsegment.svg

centroid:
  title: Centroid
  text: The __centroid__ of a triangle is the point where its three medians
    intersect. It is also the “center of mass” of the triangle.

circumcircle:
  title: Circumcircle of a triangle
  text: The __circumcircle__ of a triangle is the circle that goes through all
    three of its vertices.
  image: circumcircle.svg

triangle-altitude:
  title: Altitudes of triangles
  text: An __altitude__ (or __height__) of a triangle is a line perpendicular to
    one of the sides, that goes through the opposite vertex. Every triangle has
    three altitudes.
  image: triangle-altitude.svg

hypotenuse:
  title: Hypotenuse
  text: The __hypotenuse__ of a right-angled triangle is its longest side, which
    lies oppsite the right angle.
  image: right-triangle.svg

triangle-legs:
  title: Legs of a triangle
  text: The two __legs__ of a right-angled triangle are the two shorter sides
    (not the _hypotenuse_). They are next to the right angle.

triangle-aa:
  title: AA condition for triangles
  text: Two triangles are __similar__ if two of their angles have the same size.
    This is called the __AA similarity condition__ for triangles.

triangle-sss:
  title: SSS condition for triangles
  text: Two triangles are __congruent__ if their three sides have the same
    length. This is called the __SSS congruence condition__ for triangles.

cpoct:
  title: CPOCT
  text: CPOCT stands for __corresponding parts of congruent triangles__. It
    means that if two triangles are congruent, then all of their corresponding
    components (angles, sides, midsegments, …) must also be congruent to each
    other.

pythagoras-theorem:
  title: Pythagoras’ theorem
  text: __Pythagora’ Theorem__ states that in every right-angled triangle,
    `a^2 + b^2 = c^2`, where _c_ is the length of the hypotenuse and _a_ and _b_
    are the lengths of the other two sides.

pythagorean-triple:
  title: Pythagorean triple
  text: A __Pythagorean triple__ is a set of three whole numbers _a_, _b_ and
    _c_ that satisfy Pythagoras’ Theorem `a^2 + b^2 = c^2`.


# ------------------------------------------------------------------------------
# Polygons

polygon:
  title: Polygon
  text: A __polygon__ is geometric shape that is made up of straight line
    segments. Polygons cannot contain any curved sides, or holes. For example, a
    square is a polygon but a circle is not.
  image: polygon.svg

polygon-vertex:
  title: Vertex of a polygon
  text: The __vertices__ of a polygon are the points where its sides meet (its
    “corners”).

internal-angle:
  title: Internal angles
  text: The __internal angles__ of a polygon are the angles on the inside, at
    every vertex.
  image: internal-angle.svg

regular-polygon:
  title: Regular polygon
  text: A __regular polygon__ is a polygon in which all sides have the same
    length and all angles have the same size.
  image: regular-polygon.svg

irregular-polygon:
  title: Irregular Polygon
  text: An __irregular polygon__ is one that is _not regular_. This means that
    either the sides or the angles don’t all have the same size.

concave:
  title: Concave polygon
  text: A __concave__ polygon has at least one internal angle greater than 180°.
    At least one of the diagonals lies _outside_ the polygon. A common way to
    identify a concave polygon is to look for a “caved-in” side of the polygon.
    _Concave_ is the opposite of _convex_ polygons.

convex:
  title: Convex polygon
  text: A __convex__ polygon contains no internal angles greater than 180°. All
    diagonals lie inside the polygon. This is the opposite of _concave_
    polygons.

polygon-diagonal:
  title: Diagonal
  text: A __diagonal__ of a polygon is a line segment that connects two vertices
    that are not next to each other.

quadrilateral:
  title: Quadrilateral
  text: A __quadrilateral__ is a polygon with four sides.

apothem:
  title: Apothem
  text: The __apothem__ of a regular polygon is the distance from the midpoint
    of one of its sides to its center.

square:
  title: Square
  text: A __square__ is a regular quadrilateral: all sides have the same length,
    and all angles have the same size.

rectangle:
  title: Rectangle
  text: A __rectangle__ is a quadrilateral in which all angles are 90°.

parallelogram:
  title: Parallelogram
  text: A __parallelogram__ is a quadrilateral in which both pairs of
    opposite sides are parallel.

trapezium:
  title: Trapezium
  text: A __trapezium__ (or __trapezoid__) is a quadrilateral in which one pair
    of opposite sides are parallel.

rhombus:
  title: Rhombus
  text: A __rhombus__ (the plural is _rhombuses_ or _rhombi_) is a quadrilateral
    in which all sides have the same length.

kite:
  title: Kite
  text: A __kite__ is a quadrilateral in which two pairs of adjacent sides have
    the same length.

tessellation:
  title: Tessellation
  text: A __tessellation__ is a geometric pattern that covers a surface without
    gaps or overlaps.

penrose:
  title: Penrose tiling
  text: A __Penrose tiling__ is a _non-periodic_, _self-similar_ tessellation.
    It only consists of a few different shapes, but never repeats itself.


# ------------------------------------------------------------------------------
# Polyhedrons

polyhedron:
  title: Polyhedron
  text: A __polyhedron__ (the plural is _polyhedra_) is a 3-dimensional solid
    with no curves surfaces or edges. All faces of a polyhedron are polygons.
    For example, a cube and a pyramid are polyhedra, but a sphere is not.

polyhedron-edge:
  title: Edge of a polyhedron
  text: The __edges__ of a polyhedron are the line segments where two of its
    faces are connected.

polyhedron-vertex:
  title: Vertex of a polyhedron
  text: The “corners” of a polyhedron are called its __vertices__.

polyhedron-face:
  title: Face of a polyhedron
  text: The __faces__ of a polyhedron are the polygons which make up its
    surface.

platonic-solid:
  title: Platonic solid
  text: A __Platonic solid__ is a polyhedron made up of only one kind of
    regular polygon, that looks the same from every direction. (In other words,
    the same number of faces meet at every vertex.) There are only five
    different Platonic solids.

archimedean-solid:
  title: Archimedean solid
  text: An __Archimedean solid__ is a polyhedron made up of different kinds of
    regular polygons, that looks the same from every direction. There are 13
    different Archimedean solids.

polyhedron-dual:
  title: Dual of a polyhedron
  text: TODO

tetrahedron:
  title: Tetrahedron
  text: The __Tetrahedron__ is a Platonic solid made up of four equilateral
    triangles. It has four vertices and six edges.

cube:
  title: Cube
  text: The __Cube__ is a Platonic solid made up of six squares. It has 8
    vertices and 12 edges.

octahedron:
  title: Octahedron
  text: The __Octahedron__ is a Platonic solid made up of 8 triangles. It has
    6 vertices and 12 edges.

dodecahedron:
  title: Dodecahedron
  text: The __Dodecahedron__ is a Platonic solid made up of 12 regular
    pentagons. It has 20 vertices and 30 edges.

icosahedron:
  title: Icosahedron
  text: The __Icosahedron__ is a Platonic solid made up of 20 triangles. It has
    12 vertices and 30 edges.

truncated-icosahedron:
  title: Truncated Icosahedron
  text: The __Truncated Icosahedron__ is an _Archimedean solid_ consisting of
    12 regular pentagons and 20 regular hexagons.

net:
  title: Nets of Polyhedra
  text: The __net__ of a polyhedron is what you get when you “unfold” its
    polygonal faces onto a flat surface.

cross-section:
  title: Cross section
  text: A __cross section__ is the intersection of a three-dimensional solid
    with a plane.


# ------------------------------------------------------------------------------
# Circles

circle:
  title: Circle
  text: A __circle__ is the set of all points at a specific distance from a
    given point in two dimensions.

diameter:
  title: Diameter (circle)
  text: The __diameter__ of a circle is the distance across the center of a
    circle. It is equal to twice the radius of the circle.

radius:
  title: Radius
  text: The __radius__ of a circle is the distance from its center to its edge.

circumference:
  title: Circumference (circle)
  text: The __circumference__ of a circle is the length around its outside edge.

# Sphere	A sphere is a round, three-dimensional solid. All points on the surface of a sphere are equidistant from the center of the sphere.
# Surface Area	Surface area is the total area of all of the surfaces of a three-dimensional object.
# Volume	Volume is the amount of space inside the bounds of a three-dimensional object.
# Cone	A cone is a solid three-dimensional figure with a circular base and one vertex.
# Pyramid	A pyramid is a three-dimensional object with a base that is a polygon and triangular faces that meet at one vertex.
# Volume	Volume is the amount of space inside the bounds of a three-dimensional object.
# Cavalieri's Principle	States that if two solids have the same height and the same cross-sectional area at every level, then they will have the same volume.
# Apothem	The apothem of a regular polygon is a perpendicular segment from the center point of the polygon to the midpoint of one of its sides.
# arc	A single section of the circle, that describes a particular angle.
# central angle	An angle formed by two radii and whose vertex is at the center of the circle.
# major arc	An arc that is greater than 180∘.
# minor arc	An arc that is less than 180∘.
# semicircle	An arc that measures 180∘.
# Arc Addition Postulate	Arc addition postulate states that the measure of the arc formed by two adjacent arcs is the sum of the measures of the two arcs.
# chord	A line segment whose endpoints are on a circle.
# diameter	A chord that passes through the center of the circle. The length of a diameter is two times the length of a radius.
# inscribed angle	An angle with its vertex on the circle and whose sides are chords.
# intercepted arc	The arc that is inside an inscribed angle and whose endpoints are on the angle.
# point of tangency	The point where the tangent line touches the circle.
# Chord/Tangent Angle Theorem	The Chord/Tangent Angle Theorem states that the measure of an angle formed by a chord and a tangent that intersect on a circle is half the measure of the intercepted arc.
# Intersecting Chords Angle Theorem	The Intersecting Chords Angle Theorem states that the measure of the angle formed by two chords that intersect inside a circle is the average of the measures of the intercepted arcs.
# Conic	Conic sections are those curves that can be created by the intersection of a double cone and a plane. They include circles, ellipses, parabolas, and hyperbolas.
# Ellipse	Ellipses are conic sections that look like elongated circles. An ellipse represents all locations in two dimensions that are the same distance from two specified points called foci.
# hyperbola	A hyperbola is a conic section formed when the cutting plane intersects both sides of the cone, resulting in two infinite “U”-shaped curves.
# Parabola	A parabola is the characteristic shape of a quadratic function graph, resembling a "U".
# concentric  Two or more circles that have the same center, but different radii.
# Secant	The secant of an angle in a right triangle is the value found by dividing length of the hypotenuse by the length of the side adjacent the given angle. The secant ratio is the reciprocal of the cosine ratio.
# Tangent	The tangent of an angle in a right triangle is a value found by dividing the length of the side opposite the given angle by the length of the side adjacent to the given angle.



# ==============================================================================
# GRAPH THEORY
# ==============================================================================


graph:
  title: Graph
  text: A __graph__ is a collection of vertices connected by edges.

vertex:
  title: Vertex
  text: A __vertex__ is a point or node that is part of a graph.

edge:
  title: Edge
  text: __Edges__ are the lines that connect vertices (points) in a graph.

directed:
  title: Directed Graph
  text: In a __directed graph__, every edge as an arrow, i.e. a start vertex and
    an end vertex.

subgraph:
  title: Subgraph
  text: A graph is a __subgraph__ of another graph, if it is formed by a subset
    of the larger graphs edges and vertices.

complete:
  title: Complete Graph
  text: In __complete graphs__, every vertex is connected to every other vertex.
    A complete graph with _n_ vertices has <mfrac class='inline'><mrow><mi>n</mi>
    × (<mi>n</mi> – 1)</mrow><mrow>2</mrow></mfrac> edges.

bipartite:
  title: Bipartite Graph
  text: __Bipartite graphs__ consists of two sets of vertices. Every vertex is
    connected to all the vertices in the opposite set, but none of the vertices
    in its own set.

dna:
  title: DNA
  text: __DNA__ (Deoxyribonucleic Acid) is a molceule that contains the genetic
    blueprint of all living organisms. Most DNAs consist of two strands forming
    a _double helix_. Genetic information is encoded in the order of four
    nucleic acids (A, G, C and T) which make up the DNA. _DNA sequencing_ is the
    process of extracting this information – an essential technique in biology,
    medicine, genetics and biotechnology.

np:
  title: NP Hard Problems
  text: _Computational complexity theory_ is about determining how “difficult”
    problems are to be solved by a computer. __NP hard__ (non-deterministic
    polynomial-time hard) is the class of the most difficult problems.

graph-order:
  title: Order
  text: The __order__ of a graph is the number of vertices in it.

graph-degree:
  title: Degree
  text: The __degree__ of a vertex is the number of edges that meet at that vertex.

cycle:
  title: Cycle
  text: __Cycles__ are graphs that consist of a single ring of vertices.

subdivision:
  title: Subdivisions
  text: To create a __subdivision__ of a graph you add additional vertices along
    its edges.

millennium-prize:
  title: Millennium Prize Problems
  text: |
    The seven __Millennium Prize Problems__ are some of the most difficult open
    problems in Mathematics. They were listed in 2000 by the _Clay Mathematics
    Institute_, and each hold a $1m reward:

    * P vs NP
    * The Hodge Conjecture
    * The Poincaré Conjecture
    * The Riemann Hypothesis
    * Yang-Mills Existence and Mass Gap
    * Navier-Stokes Existence and Smoothness
    * The Birch and Swinnerton-Dyer Conjecture

    So far, just one of the problems, the _Poincaré Conjecture_, was solved.
    However the mathematician who solved it, Grigori Perelman, declined the
    award.



# ==============================================================================
# DIVISIBILITY AND PRIMES
# ==============================================================================


factor:
  title: Factor
  text: A number _a_ is a __factor__ (or divisor) of a number _b_, if you can
    divide _b_ by _a_ without remainder.

divisor:
  title: Divisor
  text: __Divisor__ is just another name for _factor_.

multiple:
  title: Multiple
  text: A number _a_ is a __multiple__ of a number _b_, if _b_ is a factor of _a_.

prime:
  title: Prime Number
  text: A __prime number__ is an integer that has no divisors other than 1 and
    itself.

primefactor:
  title: Prime Factor
  text: A __prime factor__ of a number is simply a factor which is prime.

factorisation:
  title: Prime Factorisation
  text: The __prime factorisation__ of a number is a way to write it as a
    product of prime numbers.

fta:
  title: Fundamental Theorem of Arithemtic
  text: The __Fundamental Theorem of Arithemtic__ (FTA) says that every integer
    has a unique prime factorisation.

lcm:
  title: Lowest Common Multiple
  text: The __Lowest Common Multiple__ (lcm) of two numbers _a_ and _b_ is the
    smallest integer that is a multiple of both _a_ and _b_.

gcd:
  title: Greatest Common Divisor
  text: The __Greatest Common Divisor__ (gcd) of two numbers _a_ and _b_ is the
    largest integer that is a divisor of both _a_ and _b_.

cryptography:
  title: Cryptography
  text: __Cryptography__ is an area of mathematics that‘s about enciphering and
    deciphering secret messages.

twins:
  title: Twin Primes
  text: __Twin primes__ are pairs of prime numbers like 17 and 19 which are just
    2 apart.



# ==============================================================================
# PROBABILITY
# ==============================================================================


probability:
  title: Probability
  text: A __probability__ is number between 0 and 1 that quantifies the
    likelihood of a certain event.

blackjack:
  title: Blackjack
  text: __Blackjack__ is a card game in which you add up the value of multiple
    cards to get as close to 21 – but not above.

roulette:
  title: Roulette
  text: __Roulette__ is a casino game in which you bet on where a spinning ball
    is going to land. It contains 36 numbers as well as one or two 0s.

information:
  title: Information Theory
  text: __Information Theory__ is the study of quantification, storage and
    communication of data and information. It is used in logic, cryptography
    and computer science.

probTree:
  title: Probability Tree
  text: A __probability tree__ is a tree diagram representing the combined
    probability of multiple sequential events.

venn:
  title: Venn Diagram
  text: A __venn diagram__ visualises multiple properties or events that
    overlap.
  image: venn.svg

quantum:
  title: Quantum Mechanics
  text: __Quantum Mechanics__ is a branch of Physics that explains the strange
    behaviour of fundamental particles.

radioactive:
  title: Radioactive Decay
  text: __Radioactive Decay__ is a physical process by which unstable atoms
    break apart and release energy.
